#ifndef HEADER_H
#define HEADER_H
/*
*Завдання 1. Напишіть дві функції для створення списків за
даними, введеними з клавіатури.
Перша функція повертає вказівник на голову списку.
Друга – не повертає значення, а формує голову списку за допомогою
параметру.
Напишіть функцію виведення на екран елементів списку.
Напишіть головну функцію та протестуйте в ній всі функції.
pnode formLIFO_1 ( ... ) void formLIFO_2 ( ... )
Завдання 2. Поміркуйте, як створити список так, щоб елементи в
списку були розміщені в тому ж порядку, що й при введенні з
клавіатури, а не в зворотному. Напишіть відповідну функцію.
 */
// Визначення структури вузла однозв'язного списку
struct tnode {
    int info; // Поле для зберігання значення
    tnode *next; // Вказівник на наступний елемент списку
};

typedef tnode *pnode; // Вказівник на tnode

// Функція для створення LIFO-списку, яка повертає голову.
pnode formLIFO_1();

// Функція для створення LIFO-списку, яка нічого не повертає, а голову формує за допомогою параметра
void formLIFO_2(pnode *head);

// Функція для виведення елементів списку
void display(pnode node);

// Функція для створення FIFO-списку, яка повертає голову.
pnode formFIFO();

#endif //HEADER_H
